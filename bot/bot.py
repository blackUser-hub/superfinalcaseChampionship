import os
import asyncio
from aiogram import Bot, Dispatcher, types, Router
from aiogram.types import FSInputFile, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command

# –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
API_TOKEN = "7455607693:AAFId00IZ3pZqHrD1dhD3cbf2ie7ECaw2s4"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()
router = Router()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ì–¥–µ –º—ã")],
        [KeyboardButton(text="–ö—Ç–æ –º—ã")],
        [KeyboardButton(text="–ù–∞—à–∏ —Å–æ—Ü —Å–µ—Ç–∏")],
        [KeyboardButton(text="–í–∏–¥–µ–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ")],
    ],
    resize_keyboard=True,
)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –∏ –µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
def check_file(file_path):
    if not os.path.exists(file_path):
        raise FileNotFoundError(f"–§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    file_size = os.path.getsize(file_path)
    return file_size

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
@router.message(Command("start"))
async def start_handler(message: types.Message):
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GN Studio! –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:",
        reply_markup=keyboard,
    )

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ì–¥–µ –º—ã"
@router.message(lambda msg: msg.text == "–ì–¥–µ –º—ã")
async def location_handler(message: types.Message):
    await message.answer("–ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –∑–¥–µ—Å—å: https://yandex.ru/maps/-/CHAd7VOC")

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ö—Ç–æ –º—ã"
@router.message(lambda msg: msg.text == "–ö—Ç–æ –º—ã")
async def about_handler(message: types.Message):
    photo_path = "gnstudio_image.jpg"  # –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
    try:
        photo = FSInputFile(photo_path)
        await bot.send_photo(
            chat_id=message.chat.id,
            photo=photo,
            caption="–ü—Ä–∏–≤–µ—Ç, –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥! üåü\n\n–•–æ—Ç–∏–º —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–∞—à–µ–π —Å—Ç—É–¥–∏–µ–π-–º—É–∑–µ–µ–º –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –≤ –ú–æ—Å–∫–≤–µ! –≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –º—É–∑–µ–π ‚Äî —ç—Ç–æ —Ü–µ–ª—ã–π –º–∏—Ä, –≥–¥–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ø–µ—Ä–µ–ø–ª–µ—Ç–∞—é—Ç—Å—è, —Å–æ–∑–¥–∞–≤–∞—è —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–µ —ç–º–æ—Ü–∏–∏ –∏ –Ω–æ–≤—ã–µ –∏–¥–µ–∏!"
        )
    except FileNotFoundError:
        await message.answer("–§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å.")
    except Exception as e:
        await message.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞—à–∏ —Å–æ—Ü —Å–µ—Ç–∏"
@router.message(lambda msg: msg.text == "–ù–∞—à–∏ —Å–æ—Ü —Å–µ—Ç–∏")
async def social_links_handler(message: types.Message):
    await message.answer(
        "–ù–∞—à–∏ —Å–æ—Ü —Å–µ—Ç–∏:\n"
        "Telegram: https://t.me/gnstudio_museum\n"
        "–°–∞–π—Ç: https://beivbrwbvow.my.canva.site/gn-studio"
    )

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í–∏–¥–µ–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ"
@router.message(lambda msg: msg.text == "–í–∏–¥–µ–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ")
async def video_handler(message: types.Message):
    try:
        await bot.send_message(chat_id=message.chat.id, text="–ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥...")
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤–∏–¥–µ–æ
        video_path = "rrr.mp4"
        video_size = check_file(video_path)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ
        video = FSInputFile(video_path)
        await bot.send_video(
            chat_id=message.chat.id,
            video=video,
            caption="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞! üåü\n–≠—Ç–æ –≤–∏–¥–µ–æ ‚Äî –≤–∞—à –ø–µ—Ä–≤—ã–π —à–∞–≥ –≤ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –Ω–∞—à–µ–π —Å—Ç—É–¥–∏–∏-–º—É–∑–µ—é"
        )
        await bot.send_message(chat_id=message.chat.id, text="–ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ —É–∑–Ω–∞—Ç—å –æ –Ω–∞—Å –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ:  https://t.me/GNSExcurs/2")
    except FileNotFoundError as e:
        await message.answer(str(e))
    except Exception as e:
        await message.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤
dp.include_router(router)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
